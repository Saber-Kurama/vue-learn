{"version":3,"file":"reactivity.global.js","sources":["../../shared/src/index.ts","../src/effect.ts","../src/baseHandlers.ts","../src/reactive.ts","../src/ref.ts","../src/computed.ts"],"sourcesContent":["export const isObject = (value) => typeof value == 'object' && value !== null;\nexport const extend = Object.assign\nexport const isArray = Array.isArray;\nexport const isFunction = (value) => typeof value == 'function'\nexport const isNumber = (value) => typeof value == 'number';\nexport const isString = (value) => typeof value === 'string';\nexport const isIntegerKey = (key) => parseInt(key) + '' === key;\n\n\nlet hasOwnpRroperty = Object.prototype.hasOwnProperty;\nexport const hasOwn = (target, key) => hasOwnpRroperty.call(target, key);\n\nexport const hasChanged = (oldValue,value) => oldValue !== value\nconst shared = {}\n\nexport default shared;\n","import { isArray, isIntegerKey } from \"@vue/shared/src\";\nimport { TriggerOrTypes } from \"./operators\";\n\nexport function effect(fn, options: any = {}) {\n    // 我需要让这个effect变成响应的effect，可以做到数据变化重新执行 \n    const effect = createReactiveEffect(fn, options);\n    if (!options.lazy) { // 默认的effect会先执行\n        effect(); // 响应式的effect默认会先执行一次\n    }\n    return effect;\n}\nlet uid = 0;\nlet activeEffect; // 存储当前的effect\nconst effectStack = []\nfunction createReactiveEffect(fn, options) {\n    const effect = function reactiveEffect() {\n        if (!effectStack.includes(effect)) { // 保证effect没有加入到effectStack中\n            try {\n                effectStack.push(effect);\n                activeEffect = effect;\n                return fn(); // 函数执行时会取值  会执行get方法\n            } finally {\n                effectStack.pop();\n                activeEffect = effectStack[effectStack.length - 1];\n            }\n        }\n    }\n    effect.id = uid++; // 制作一个effect标识 用于区分effect\n    effect._isEffect = true; // 用于标识这个是响应式effect\n    effect.raw = fn; // 保留effect对应的原函数\n    effect.options = options; // 在effect上保存用户的属性\n    return effect;\n}\n// 让，某个对象中的属性 收集当前他对应的effect函数\nconst targetMap = new WeakMap();\nexport function track(target, type, key) { // 可以拿到当前的effect\n    //  activeEffect; // 当前正在运行的effect\n    if (activeEffect === undefined) { // 此属性不用收集依赖，因为没在effect中使用\n        return;\n    }\n    let depsMap = targetMap.get(target);\n    if (!depsMap) {\n        targetMap.set(target, (depsMap = new Map));\n    }\n    let dep = depsMap.get(key);\n    if (!dep) {\n        depsMap.set(key, (dep = new Set))\n    }\n    if (!dep.has(activeEffect)) {\n        dep.add(activeEffect);\n    }\n}\n\n// 找属性对应的effect 让其执行 （数组、对象）\nexport function trigger(target, type, key?, newValue?, oldValue?) {\n\n    // 如果这个属性没有 收集过effect，那不需要做任何操作\n    const depsMap = targetMap.get(target);\n    if (!depsMap) return;\n\n    const effects = new Set(); // 这里对effect去重了\n    const add = (effectsToAdd) => {\n        if (effectsToAdd) {\n            effectsToAdd.forEach(effect => effects.add(effect));\n        }\n    }\n    // 我要将所有的 要执行的effect 全部存到一个新的集合中，最终一起执行\n\n    // 1. 看修改的是不是数组的长度 因为改长度影响比较大\n    if (key === 'length' && isArray(target)) {\n        // 如果对应的长度 有依赖收集需要更新\n        depsMap.forEach((dep, key) => {\n            if (key === 'length' || key > newValue) { // 如果更改的长度 小于收集的索引，那么这个索引也需要触发effect重新执行\n                add(dep)\n            }\n        })\n    } else {\n        // 可能是对象\n        if (key !== undefined) { // 这里肯定是修改， 不能是新增\n            add(depsMap.get(key)); // 如果是新增\n        }\n        // 如果修改数组中的 某一个索引 怎么办？\n        switch (type) {  // 如果添加了一个索引就触发长度的更新\n            case TriggerOrTypes.ADD:\n                if (isArray(target) && isIntegerKey(key)) {\n                    add(depsMap.get('length'));\n                }\n        }\n    }\n    effects.forEach((effect: any) => {\n        if(effect.options.scheduler){\n            effect.options.scheduler(effect);\n        }else{\n            effect();\n        }\n    })\n}\n// weakMap {name:'zf',age:12}  (map) =>{name => set(effect),age => set(effect)}\n// {name:'zf',age:12} => name => [effect effect]\n\n\n// 函数调用是一个栈型结构\n// effect(()=>{ // effect1   [effect1]\n//     state.name -> effect1\n//     effect(()=>{ // effect2\n//         state.age -> effect2\n//     })\n//     state.address -> effect1\n// })","import { extend, hasChanged, hasOwn, isArray, isIntegerKey, isObject } from \"@vue/shared\"\nimport { track, trigger } from \"./effect\";\nimport { TrackOpTypes, TriggerOrTypes } from \"./operators\";\nimport { reactive, readonly } from \"./reactive\"\n\n// get 逻辑\n// 针对 浅拷贝和readonly 的一些处理，另外是收集依赖\nconst get = createGetter(false, false)\nconst shallowGet = createGetter(false, true)\nconst readonlyGet = createGetter(true);\nconst showllowReadonlyGet = createGetter(true, true)\n\n// set \n// readonly 不能赋值， 另外就是 触发 依赖的 effect\nconst set = createSetter();\nconst shallowSet = createSetter(true)\n\n// \nexport const mutableHandlers =  {\n  get,\n  set\n}\n\nexport const shallowReactiveHandlers =  {\n  get: shallowGet,\n  set: shallowSet\n}\n\nlet readonlyObj = {\n  set: (target, key) => {\n      console.warn(`set on key ${key} falied`)\n  }\n}\nexport const readonlyHandlers = extend({\n  get: readonlyGet,\n}, readonlyObj)\nexport const shallowReadonlyHandlers = extend({\n  get: showllowReadonlyGet,\n}, readonlyObj)\n\nfunction createGetter( isReadonly = false, shallow = false) {\n  // 这个最好返回箭头函数\n  return function get(target, key, receiver) {\n    const res = Reflect.get(target, key, receiver);\n    if(!isReadonly){\n        // 执行 收集依赖\n        track(target,TrackOpTypes.GET,key)\n    }\n    // 浅拷贝\n    if(shallow) {\n      return res\n    }\n    if(isObject(res)){\n      return isReadonly ? readonly(res) : reactive(res)\n    }\n    return res\n  } \n}\n\nfunction createSetter(shallow = false) {\n  return function set(target, key, value, receiver) {\n\n    const oldValue = target[key]; // 获取老的值\n\n    let hadKey = isArray(target) && isIntegerKey(key) ? Number(key) < target.length : hasOwn(target,key);\n\n    const result = Reflect.set(target, key, value, receiver); // target[key] = value\n\n\n    if(!hadKey){\n        // 新增 \n        trigger(target,TriggerOrTypes.ADD,key,value);\n    }else if(hasChanged(oldValue,value)){\n        // 修改 \n        trigger(target,TriggerOrTypes.SET,key,value,oldValue)\n    }\n\n\n    // 我们要区分是新增的 还是修改的  vue2 里无法监控更改索引，无法监控数组的长度变化  -》 hack的方法 需要特殊处理\n\n\n    // 当数据更新时 通知对应属性的effect重新执行\n\n\n    return result;\n}\n}\n","import { isObject } from \"@vue/shared\";\nimport { mutableHandlers, readonlyHandlers, shallowReactiveHandlers, shallowReadonlyHandlers } from \"./baseHandlers\";\n\nexport const reactive = (target) => {\n  return createReactiveObject(target, false, mutableHandlers);\n};\n\nexport const shallowReactive = (target) => {\n  return createReactiveObject(target, false, shallowReactiveHandlers);\n};\n\nexport const shallowReadonly = (target) => {\n  return createReactiveObject(target, true, readonlyHandlers);\n};\n\nexport const readonly = (target) => {\n  return createReactiveObject(target, true, shallowReadonlyHandlers);\n};\n\nconst reactiveMap = new WeakMap(); // 会自动垃圾回收，不会造成内存泄漏， 存储的key只能是对\nconst readonlyMap = new WeakMap();\n\nexport function createReactiveObject(target, isReadonly, baseHandlers) {\n  // 如果目标不是对象 没法拦截了，reactive这个api只能拦截对象类型\n  // 其他的边界考虑\n  if (!isObject(target)) {\n    return target;\n  }\n  const proxyMap = isReadonly ? readonlyMap : reactiveMap;\n  const existProxy = proxyMap.get(target);\n  if (existProxy) {\n    return existProxy; // 如果已经被代理了 直接返回即可\n  }\n  console.log('baseHandlers', baseHandlers)\n  const proxy  = new Proxy(target, baseHandlers);\n  proxyMap.set(target, proxy)\n  return proxy\n}\n","import { hasChanged, isArray, isObject } from \"@vue/shared/src\";\nimport { track, trigger } from \"./effect\";\nimport { TrackOpTypes, TriggerOrTypes } from \"./operators\";\nimport { reactive } from \"./reactive\";\n\nexport function ref(value) {\n  // 将普通类型变相一个对象， 使用 对象的 get set 方法\n  return createRef(value);\n}\n\nexport function shallowRef(value) {\n  return createRef(value, true)\n}\n\nconst convert = (val) => (isObject(val) ? reactive(val) : val);\n\nclass RefImpl {\n  private _value;\n  public __v_isRef = true; // 产生的实例会被添加 __v_isRef 表示是一个ref属性\n  constructor(public rawValue, public shallow) {\n    this._value = shallow ? rawValue : convert(rawValue);\n  }\n  get value() {\n    track(this, TrackOpTypes.GET, \"value\");\n    return this._value;\n  }\n  set value(newValue) {\n    if (hasChanged(newValue, this.rawValue)) {\n      // 判断老值和新值是否有变化\n      this.rawValue = newValue; // 新值会作为老值\n      this._value = this.shallow ? newValue : convert(newValue);\n      trigger(this, TriggerOrTypes.SET, \"value\", newValue);\n    }\n  }\n}\n\nfunction createRef(rawValue, shallow = false) {\n  return new RefImpl(rawValue, shallow);\n}\n\nclass ObjectRefImpl {\n  public __v_isRef = true;\n  constructor(public target, public key) {}\n  get value(){ // 代理  \n      return this.target[this.key] // 如果原对象是响应式的就会依赖收集\n  }\n  set value(newValue){\n      this.target[this.key] = newValue; // 如果原来对象是响应式的 那么就会触发更新\n  }\n}\n\n// 将响应式对象的某一个key对应的值 转化成ref \nexport function toRef(target, key) { // 可以把一个对象的值转化成 ref类型\n  return new ObjectRefImpl(target, key)\n}\n\nexport function toRefs(object){ // object 可能传递的是一个数组 或者对象\n  const ret = isArray(object) ? new Array(object.length) :{}\n  for(let key in object){\n      ret[key] = toRef(object,key);\n  }\n  return ret;\n}\n\n","import { isFunction } from \"@vue/shared/src\";\nimport { effect, track, trigger } from \"./effect\";\nimport { TrackOpTypes, TriggerOrTypes } from \"./operators\";\n\nclass ComputedRefImpl {\n  private _dirty = true;\n  public _value;\n  public effect;\n  constructor(getter, public setter) {\n    this.effect = effect(getter, {\n      lazy: true, // 默认不执行\n      scheduler: () => {\n        // 走到这一步的话 证明 值反生修改\n        if(!this._dirty){\n          console.log('>>>')\n          this._dirty = true\n          trigger(this,TriggerOrTypes.SET,'value') \n        }\n      }\n    });\n  }\n\n  get value() {\n    // 执行 effect\n    trigger(this,TriggerOrTypes.SET,'value')\n    if(this._dirty){\n      this._value = this.effect();\n      this._dirty = false\n    }\n    track(this,TrackOpTypes.GET,'value')\n    return this._value;\n  }\n  set value(newValue) {\n    this.setter(newValue);\n  }\n}\n\n/**\n *  接受 getter setter 或者一个 function\n */\nexport function computed(getterOrOptions) {\n  let getter;\n  let setter;\n  if (isFunction(getterOrOptions)) {\n    getter = getterOrOptions;\n    setter = () => {\n      console.warn(\"computed value must be readonly\");\n    };\n  } else {\n    getter = getterOrOptions.get;\n    setter = getterOrOptions.set;\n  }\n\n  return new ComputedRefImpl(getter, setter);\n}\n"],"names":[],"mappings":"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"}