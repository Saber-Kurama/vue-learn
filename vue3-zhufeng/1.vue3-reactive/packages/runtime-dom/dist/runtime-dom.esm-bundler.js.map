{"version":3,"file":"runtime-dom.esm-bundler.js","sources":["../../shared/src/index.ts","../src/nodeOps.ts","../src/modules/attr.ts","../src/modules/class.ts","../src/modules/events.ts","../src/modules/style.ts","../src/patchProp.ts","../../runtime-core/src/renderer.ts","../src/index.ts"],"sourcesContent":["export const isObject = (value) => typeof value == 'object' && value !== null;\nexport const extend = Object.assign\nexport const isArray = Array.isArray;\nexport const isFunction = (value) => typeof value == 'function'\nexport const isNumber = (value) => typeof value == 'number';\nexport const isString = (value) => typeof value === 'string';\nexport const isIntegerKey = (key) => parseInt(key) + '' === key;\n\n\nlet hasOwnpRroperty = Object.prototype.hasOwnProperty;\nexport const hasOwn = (target, key) => hasOwnpRroperty.call(target, key);\n\nexport const hasChanged = (oldValue,value) => oldValue !== value\nconst shared = {}\n\nexport default shared;\n","export const nodeOps = {\n  createElement: tagName => document.createElement(tagName),\n  remove: child => {// 删除\n      const parent = child.parentNode;\n      if(parent){\n        parent.removeChild(child)\n      }\n  },\n  insert: (child, parent, anchor = null) => {\n    parent.insertBefore(child, anchor); // \n  },\n  querySelector: selector => document.querySelector(selector),\n  setElementText: (el, text) => el.textContent = text,\n  createText: text => document.createTextNode(text),\n  setText: (node, text) => node.nodeValue = text\n}","\n\nexport const patchAttr = (el,key,value) =>{\n  if(value == null){\n      el.removeAttribute(key);\n  }else {\n      el.setAttribute(key,value);\n  }\n}","export const patchClass = (el ,value) => {\n  if(value == null){\n    value = ''\n  }\n  el.className = value\n}\n","export const patchEvent = (el, key, value) => {\n  // 对函数的缓存\n  const invokers = el._vei || (el._vei || {})\n  const exists = invokers[key]; // 如果不存在\n  if(value && exists){ // 更新绑定事件\n    exists.value = value;\n  }else{\n    const eventName = key.slice(2).toLowerCase()\n    if(value){ // 之前没有绑定过现在绑定\n      let invoker = invokers[key] = createInvoker(value);\n       el.addEventListener(eventName,invoker)\n    }else{\n      if(exists){ // 以前绑定了 当时没有value\n        el.removeEventListener(eventName,exists);\n        // invokers[key] = undefined;\n        delete invokers[key]\n      }\n    }\n  }\n}\n\nfunction createInvoker(value) {\n  const invoker = (e) => { invoker.value(e)} \n  invoker.value = value;\n  return invoker\n}","export const patchStyle = (el,prev,next) =>{ // cssText;\n  const style = el.style; //获取样式 \n  if(next == null){\n      el.removeAttribute('style') // {style:{}}  {}\n  }else{\n      // 老的里新的有没有 \n      if(prev){  // {style:{color}} => {style:{background}}\n          for(let key in prev){\n              if(next[key] == null){ // 老的里有 新的里没有 需要删除\n                  style[key] = '';\n              }\n          }\n      }\n      // 新的里面需要赋值到style上\n      for(let key in next){ // {style:{color}} => {style:{background}}\n          style[key] = next[key];\n      }\n  }\n\n}","import { patchAttr } from \"./modules/attr\";\nimport { patchClass } from \"./modules/class\";\nimport { patchEvent } from \"./modules/events\";\nimport { patchStyle } from \"./modules/style\";\n\n// 这个里面针对的是属性操作\nexport const patchProp = (el, key, preValue, nextValue) => {\n  switch (key) {\n    case \"class\":\n      patchClass(el, nextValue); // 比对属性\n      break;\n    case \"style\": // {style:{color:'red'}}  {style:{background:'red'}}\n      patchStyle(el, preValue, nextValue);\n      break;\n    default:\n      // 如果不是事件 才是属性\n      if (/^on[^a-z]/.test(key)) {\n        patchEvent(el, key, nextValue); // 事件就是添加和删除 修改\n      } else {\n        patchAttr(el, key, nextValue);\n      }\n\n      break;\n  }\n};\n","export function createRenderer(rendererOptions) { // 告诉core 怎么渲染\n  return {\n    createApp: (rootComponent,rootProps) => {}\n  }\n}\n","// runtime-dom 核心就是  提供domAPI方法了\n//操作节点、操作属性的更新\n// 节点操作就是增删改查 \n// 属性操作 添加 删除 更新 (样式、类、事件、其他属性)\nimport { extend } from \"@vue/shared/src\";\nimport { nodeOps } from \"./nodeOps\"; // 对象\nimport { patchProp } from \"./patchProp\"; // 方法\nimport { createRenderer } from '@vue/runtime-core/src'\n\n\n// 渲染时用到的所有方法\nconst rendererOptions = extend({ patchProp }, nodeOps)\n\n// vue中runtime-core 提供了核心的方法 用来处理渲染的，他会使用runtime-dom中的api进行渲染\nexport function createApp(rootComponent, rootProps = null) {\n  const app: any = createRenderer(rendererOptions).createApp(rootComponent,rootProps)\n  // let {mount} = app\n  app.mount = function (container) {\n      // // 清空容器的操作 \n      // container = nodeOps.querySelector(container);\n      // container.innerHTML = '';\n      // mount(container); // 函数劫持\n      // // 将组件 渲染成dom元素 进行挂载\n  }\n  return app;\n}\n\nexport default {}"],"names":[],"mappings":"AACO,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM;;ACD5B,MAAM,OAAO,GAAG;IACrB,aAAa,EAAE,OAAO,IAAI,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC;IACzD,MAAM,EAAE,KAAK;QACT,MAAM,MAAM,GAAG,KAAK,CAAC,UAAU,CAAC;QAChC,IAAG,MAAM,EAAC;YACR,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,CAAA;SAC1B;KACJ;IACD,MAAM,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,MAAM,GAAG,IAAI;QACnC,MAAM,CAAC,YAAY,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;KACpC;IACD,aAAa,EAAE,QAAQ,IAAI,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC;IAC3D,cAAc,EAAE,CAAC,EAAE,EAAE,IAAI,KAAK,EAAE,CAAC,WAAW,GAAG,IAAI;IACnD,UAAU,EAAE,IAAI,IAAI,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC;IACjD,OAAO,EAAE,CAAC,IAAI,EAAE,IAAI,KAAK,IAAI,CAAC,SAAS,GAAG,IAAI;CAC/C;;ACbM,MAAM,SAAS,GAAG,CAAC,EAAE,EAAC,GAAG,EAAC,KAAK;IACpC,IAAG,KAAK,IAAI,IAAI,EAAC;QACb,EAAE,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;KAC3B;SAAK;QACF,EAAE,CAAC,YAAY,CAAC,GAAG,EAAC,KAAK,CAAC,CAAC;KAC9B;AACH,CAAC;;ACRM,MAAM,UAAU,GAAG,CAAC,EAAE,EAAE,KAAK;IAClC,IAAG,KAAK,IAAI,IAAI,EAAC;QACf,KAAK,GAAG,EAAE,CAAA;KACX;IACD,EAAE,CAAC,SAAS,GAAG,KAAK,CAAA;AACtB,CAAC;;ACLM,MAAM,UAAU,GAAG,CAAC,EAAE,EAAE,GAAG,EAAE,KAAK;;IAEvC,MAAM,QAAQ,GAAG,EAAE,CAAC,IAAI,KAAK,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC,CAAA;IAC3C,MAAM,MAAM,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC;IAC7B,IAAG,KAAK,IAAI,MAAM,EAAC;QACjB,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;KACtB;SAAI;QACH,MAAM,SAAS,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAA;QAC5C,IAAG,KAAK,EAAC;YACP,IAAI,OAAO,GAAG,QAAQ,CAAC,GAAG,CAAC,GAAG,aAAa,CAAC,KAAK,CAAC,CAAC;YAClD,EAAE,CAAC,gBAAgB,CAAC,SAAS,EAAC,OAAO,CAAC,CAAA;SACxC;aAAI;YACH,IAAG,MAAM,EAAC;gBACR,EAAE,CAAC,mBAAmB,CAAC,SAAS,EAAC,MAAM,CAAC,CAAC;;gBAEzC,OAAO,QAAQ,CAAC,GAAG,CAAC,CAAA;aACrB;SACF;KACF;AACH,CAAC,CAAA;AAED,SAAS,aAAa,CAAC,KAAK;IAC1B,MAAM,OAAO,GAAG,CAAC,CAAC,OAAO,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA,EAAC,CAAA;IAC1C,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;IACtB,OAAO,OAAO,CAAA;AAChB;;ACzBO,MAAM,UAAU,GAAG,CAAC,EAAE,EAAC,IAAI,EAAC,IAAI;IACrC,MAAM,KAAK,GAAG,EAAE,CAAC,KAAK,CAAC;IACvB,IAAG,IAAI,IAAI,IAAI,EAAC;QACZ,EAAE,CAAC,eAAe,CAAC,OAAO,CAAC,CAAA;KAC9B;SAAI;;QAED,IAAG,IAAI,EAAC;YACJ,KAAI,IAAI,GAAG,IAAI,IAAI,EAAC;gBAChB,IAAG,IAAI,CAAC,GAAG,CAAC,IAAI,IAAI,EAAC;oBACjB,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;iBACnB;aACJ;SACJ;;QAED,KAAI,IAAI,GAAG,IAAI,IAAI,EAAC;YAChB,KAAK,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;SAC1B;KACJ;AAEH,CAAC;;ACdD;AACO,MAAM,SAAS,GAAG,CAAC,EAAE,EAAE,GAAG,EAAE,QAAQ,EAAE,SAAS;IACpD,QAAQ,GAAG;QACT,KAAK,OAAO;YACV,UAAU,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC;YAC1B,MAAM;QACR,KAAK,OAAO;YACV,UAAU,CAAC,EAAE,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;YACpC,MAAM;QACR;;YAEE,IAAI,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;gBACzB,UAAU,CAAC,EAAE,EAAE,GAAG,EAAE,SAAS,CAAC,CAAC;aAChC;iBAAM;gBACL,SAAS,CAAC,EAAE,EAAE,GAAG,EAAE,SAAS,CAAC,CAAC;aAC/B;YAED,MAAM;KACT;AACH,CAAC;;SCxBe,cAAc,CAAC,eAAe;IAC5C,OAAO;QACL,SAAS,EAAE,CAAC,aAAa,EAAC,SAAS,QAAO;KAC3C,CAAA;AACH;;ACJA;AAUA;AACwB,MAAM,CAAC,EAAE,SAAS,EAAE,EAAE,OAAO,EAAC;AAEtD;SACgB,SAAS,CAAC,aAAa,EAAE,SAAS,GAAG,IAAI;IACvD,MAAM,GAAG,GAAQ,cAAc,CAAgB,CAAC,CAAC,SAAS,CAAC,aAAa,EAAC,SAAS,CAAC,CAAA;;IAEnF,GAAG,CAAC,KAAK,GAAG,UAAU,SAAS;;;;;;KAM9B,CAAA;IACD,OAAO,GAAG,CAAC;AACb,CAAC;AAED,YAAe,EAAE;;;;"}